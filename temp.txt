./latex/mshr_8cc.tex:38:115         DPRINTF(Cache, "Replacing UpgradeReq with ReadExReq\n");
./latex/mshr_8cc.tex:41:118         DPRINTF(Cache, "Replacing SCUpgradeReq with SCUpgradeFailReq\n");
./latex/mshr_8cc.tex:44:121         DPRINTF(Cache, "Replacing StoreCondReq with StoreCondFailReq\n");
./latex/classCache.tex:224:294     DPRINTF(Cache, "%s for %s address %x size %d\n", __func__,
./latex/classCache.tex:236:306     DPRINTF(Cache, "%s%s %x (%s) %s %s\n", pkt->cmdString(),
./latex/classCache.tex:278:348         DPRINTF(Cache, "%s new state is %s\n", __func__, blk->print());
./latex/classCache.tex:318:1220             DPRINTF(Cache, "replacement: replacing %x (%s) with %x (%s): %s\n",
./latex/classCache.tex:388:1326     DPRINTF(Cache, "%s for %s address %x size %d\n", __func__,
./latex/classCache.tex:411:1349     DPRINTF(Cache, "%s created response: %s address %x size %d\n",
./latex/classCache.tex:484:846     DPRINTF(Cache, "functional %s %x (%s) %s%s%s\n",
./latex/classCache.tex:558:664     DPRINTF(Cache, "%s created %s address %x size %d\n",
./latex/classCache.tex:719:1760                 DPRINTF(Cache, "Prefetch squashed by upper cache.  "
./latex/classCache.tex:733:1774                 DPRINTF(Cache, "Upward snoop of prefetch for addr"
./latex/classCache.tex:796:1265             DPRINTF(Cache, "using temp block for %x (%s)\n", addr,
./latex/classCache.tex:830:1299     DPRINTF(Cache, "Block addr %x (%s) moving from state %x to %s\n",
./latex/classCache.tex:857:1360     DPRINTF(Cache, "%s for %s address %x size %d\n", __func__,
./latex/classCache.tex:911:1414          DPRINTF(Cache, "%s snoop miss for %s address %x size %d\n",
./latex/classCache.tex:915:1418         DPRINTF(Cache, "%s snoop hit for %s for address %x size %d, "
./latex/classCache.tex:931:1434         DPRINTF(Cache, "Squashing prefetch from lower cache %#x\n",
./latex/classCache.tex:978:1481     DPRINTF(Cache, "new state is %s\n", blk->print());
./latex/classCache.tex:1193:692                 DPRINTF(Cache, "rcvd mem-inhibited %s on 0x%x (%s):"
./latex/classCache.tex:1199:698                 DPRINTF(Cache, "forwarding mem-inhibited %s on 0x%x (%s)\n",
./latex/classCache.tex:1205:704             DPRINTF(Cache, "rcvd mem-inhibited %s on 0x%x: not responding\n",
./latex/classCache.tex:1231:730         DPRINTF(Cache, "Sending an atomic %s for %x (%s)\n",
./latex/classCache.tex:1241:740         DPRINTF(Cache, "Receive response: %s for addr %x (%s) in state %i\n",
./latex/classCache.tex:1384:435         DPRINTF(Cache, "mem inhibited on 0x%x (%s): not responding\n",
./latex/classCache.tex:1583:890         DPRINTF(Cache, "Cache received packet with error for address %x (%s), "
./latex/classCache.tex:1588:895     DPRINTF(Cache, "Handling response to %s for address %x (%s)\n",
./latex/classCache.tex:1621:928         DPRINTF(Cache, "Block for addr %x being updated in Cache\n",
./latex/classCache.tex:1699:1005                 DPRINTF(Cache, "%s updated cmd to %s for address %x\n",
./latex/classCache.tex:1720:1026             DPRINTF(Cache, "processing deferred snoop...\n");
./latex/classCache.tex:1774:1080     DPRINTF(Cache, "Leaving %s with %s for address %x\n", __func__,
./latex/classCache.tex:1792:1489     DPRINTF(Cache, "%s for %s address %x size %d\n", __func__,
./latex/classCache.tex:1828:1525         DPRINTF(Cache, "Squashing prefetch from lower cache on mshr hit %#x\n",
./latex/classCache.tex:1837:1534         DPRINTF(Cache, "Deferring snoop on in-service MSHR to blk %x (%s)."
./latex/classCache.tex:1849:1546         DPRINTF(Cache, "Snoop hit in writeback to addr: %x (%s)\n",
./latex/classCache.tex:1906:379     DPRINTF(Cache, "%s for %s address %x size %d\n", __func__,
./latex/classCache.tex:1921:394         DPRINTF(Cache, "Got prefetch response from above for addr %#x (%s)\n",
./latex/classCache.tex:2122:1186     DPRINTF(Cache, "%s%s %x uncacheable\n", pkt->cmdString(),
./latex/classCache_1_1CpuSidePort.tex:107:1872         DPRINTF(Cache,"Scheduling a retry while blocked\n");
./latex/classBaseCache.tex:507:531         DPRINTF(Cache,"Unblocking for cause %d, mask=%d\n", cause, blocked);
./latex/classBaseCache.tex:1430:517         DPRINTF(Cache,"Blocking for cause %d, mask=%d\n", cause, blocked);
./latex/classMSHR.tex:380:314     DPRINTF(Cache, "%s for %s address %x size %d\n", __func__,
./mem/cache/mshr.cc:115:        DPRINTF(Cache, "Replacing UpgradeReq with ReadExReq\n");
./mem/cache/mshr.cc:118:        DPRINTF(Cache, "Replacing SCUpgradeReq with SCUpgradeFailReq\n");
./mem/cache/mshr.cc:121:        DPRINTF(Cache, "Replacing StoreCondReq with StoreCondFailReq\n");
./mem/cache/mshr.cc:314:    DPRINTF(Cache, "%s for %s address %x size %d\n", __func__,
./mem/cache/cache_impl.hh~:294:    DPRINTF(Cache, "%s for %s address %x size %d\n", __func__,
./mem/cache/cache_impl.hh~:316:    DPRINTF(Cache, "%s%s %x (%s) %s %s\n", pkt->cmdString(),
./mem/cache/cache_impl.hh~:322:      DPRINTF(Cache, "Before status : %x, tag : %x, data : %x\n", blk->status, blk->tag, (uint64_t)blk->data);
./mem/cache/cache_impl.hh~:329:	  DPRINTF(Cache, "Hit Writeback Before status : %x, tag : %x, data : %x\n", blk->status, blk->tag, (uint64_t)blk->data);
./mem/cache/cache_impl.hh~:331:	    DPRINTF(Cache, "Write Back (hit writeback)\n");
./mem/cache/cache_impl.hh~:337:	  DPRINTF(Cache, "Hit Invalidate Before status : %x, tag : %x, data : %x\n", blk->status, blk->tag, (uint64_t)blk->data);
./mem/cache/cache_impl.hh~:342:	  DPRINTF(Cache, "Hit Unlock Before status : %x, tag : %x, data : %x\n", blk->status, blk->tag, (uint64_t)blk->data);
./mem/cache/cache_impl.hh~:346:	   DPRINTF(Cache, "Create Dirty Before status : %x, tag : %x, data : %x\n", blk->status, blk->tag, (uint64_t)blk->data);
./mem/cache/cache_impl.hh~:352:	  DPRINTF(Cache, "Create Dirty Lock Before status : %x, tag : %x, data : %x\n", blk->status, blk->tag, (uint64_t)blk->data);
./mem/cache/cache_impl.hh~:392:        DPRINTF(Cache, "%s new state is %s\n", __func__, blk->print());
./mem/cache/cache_impl.hh~:423:    DPRINTF(Cache, "%s for %s address %x size %d\n", __func__,
./mem/cache/cache_impl.hh~:438:        DPRINTF(Cache, "Got prefetch response from above for addr %#x (%s)\n",
./mem/cache/cache_impl.hh~:479:        DPRINTF(Cache, "mem inhibited on 0x%x (%s): not responding\n",
./mem/cache/cache_impl.hh~:579:	    DPRINTF(Cache, "After status : %x, tag : %x, data : %x\n", blk->status, blk->tag, (uint64_t)blk->data);
./mem/cache/cache_impl.hh~:661:		  DPRINTF(Cache, "Create Dirty After status : %x, tag : %x, data : %x\n", blk->status, blk->tag, (uint64_t)blk->data);
./mem/cache/cache_impl.hh~:671:		  DPRINTF(Cache, "Create Dirty Lock After status : %x, tag : %x, data : %x\n", blk->status, blk->tag, (uint64_t)blk->data);
./mem/cache/cache_impl.hh~:744:    DPRINTF(Cache, "%s created %s address %x size %d\n",
./mem/cache/cache_impl.hh~:772:                DPRINTF(Cache, "rcvd mem-inhibited %s on 0x%x (%s):"
./mem/cache/cache_impl.hh~:778:                DPRINTF(Cache, "forwarding mem-inhibited %s on 0x%x (%s)\n",
./mem/cache/cache_impl.hh~:784:            DPRINTF(Cache, "rcvd mem-inhibited %s on 0x%x: not responding\n",
./mem/cache/cache_impl.hh~:810:        DPRINTF(Cache, "Sending an atomic %s for %x (%s)\n",
./mem/cache/cache_impl.hh~:820:        DPRINTF(Cache, "Receive response: %s for addr %x (%s) in state %i\n",
./mem/cache/cache_impl.hh~:926:    DPRINTF(Cache, "functional %s %x (%s) %s%s%s\n",
./mem/cache/cache_impl.hh~:970:        DPRINTF(Cache, "Cache received packet with error for address %x (%s), "
./mem/cache/cache_impl.hh~:975:    DPRINTF(Cache, "Handling response to %s for address %x (%s)\n",
./mem/cache/cache_impl.hh~:1008:        DPRINTF(Cache, "Block for addr %x being updated in Cache\n",
./mem/cache/cache_impl.hh~:1019:          DPRINTF(Cache, "Fetch and Lock After status : %x, tag : %x, data : %x\n", blk->status, blk->tag, (uint64_t)blk->data);
./mem/cache/cache_impl.hh~:1090:                DPRINTF(Cache, "%s updated cmd to %s for address %x\n",
./mem/cache/cache_impl.hh~:1111:            DPRINTF(Cache, "processing deferred snoop...\n");
./mem/cache/cache_impl.hh~:1165:    DPRINTF(Cache, "Leaving %s with %s for address %x\n", __func__,
./mem/cache/cache_impl.hh~:1282:    DPRINTF(Cache, "%s%s %x uncacheable\n", pkt->cmdString(),
./mem/cache/cache_impl.hh~:1316:            DPRINTF(Cache, "replacement: replacing %x (%s) with %x (%s): %s\n",
./mem/cache/cache_impl.hh~:1361:            DPRINTF(Cache, "using temp block for %x (%s)\n", addr,
./mem/cache/cache_impl.hh~:1395:    DPRINTF(Cache, "Block addr %x (%s) moving from state %x to %s\n",
./mem/cache/cache_impl.hh~:1422:    DPRINTF(Cache, "%s for %s address %x size %d\n", __func__,
./mem/cache/cache_impl.hh~:1445:    DPRINTF(Cache, "%s created response: %s address %x size %d\n",
./mem/cache/cache_impl.hh~:1456:    DPRINTF(Cache, "%s for %s address %x size %d\n", __func__,
./mem/cache/cache_impl.hh~:1510:         DPRINTF(Cache, "%s snoop miss for %s address %x size %d\n",
./mem/cache/cache_impl.hh~:1514:        DPRINTF(Cache, "%s snoop hit for %s for address %x size %d, "
./mem/cache/cache_impl.hh~:1530:        DPRINTF(Cache, "Squashing prefetch from lower cache %#x\n",
./mem/cache/cache_impl.hh~:1577:    DPRINTF(Cache, "new state is %s\n", blk->print());
./mem/cache/cache_impl.hh~:1585:    DPRINTF(Cache, "%s for %s address %x size %d\n", __func__,
./mem/cache/cache_impl.hh~:1621:        DPRINTF(Cache, "Squashing prefetch from lower cache on mshr hit %#x\n",
./mem/cache/cache_impl.hh~:1630:        DPRINTF(Cache, "Deferring snoop on in-service MSHR to blk %x (%s)."
./mem/cache/cache_impl.hh~:1642:        DPRINTF(Cache, "Snoop hit in writeback to addr: %x (%s)\n",
./mem/cache/cache_impl.hh~:1856:                DPRINTF(Cache, "Prefetch squashed by upper cache.  "
./mem/cache/cache_impl.hh~:1870:                DPRINTF(Cache, "Upward snoop of prefetch for addr"
./mem/cache/cache_impl.hh~:1968:        DPRINTF(Cache,"Scheduling a retry while blocked\n");
./mem/cache/cache_impl.hh:294:    DPRINTF(Cache, "%s for %s address %x size %d\n", __func__,
./mem/cache/cache_impl.hh:316:    DPRINTF(Cache, "%s%s %x (%s) %s %s\n", pkt->cmdString(),
./mem/cache/cache_impl.hh:322:      DPRINTF(Cache, "Before status : %x, tag : %x, data : %x\n", blk->status, blk->tag, (uint64_t)blk->data[0]);
./mem/cache/cache_impl.hh:329:	  DPRINTF(Cache, "Hit Writeback Before status : %x, tag : %x, data : %x\n", blk->status, blk->tag, (uint64_t)blk->data[0]);
./mem/cache/cache_impl.hh:331:	    DPRINTF(Cache, "Write Back (hit writeback)\n");
./mem/cache/cache_impl.hh:337:	  DPRINTF(Cache, "Hit Invalidate Before status : %x, sets : %x, tag : %x, data : %x\n", blk->status, tags->extractSet(pkt->getAddr()),blk->tag, (uint64_t)blk->data[0]);
./mem/cache/cache_impl.hh:342:	  DPRINTF(Cache, "Hit Unlock Before status : %x, sets : %x, tag : %x, data : %x\n", blk->status, tags->extractSet(pkt->getAddr()),blk->tag, (uint64_t)blk->data[0]);
./mem/cache/cache_impl.hh:346:	  DPRINTF(Cache, "Create Dirty Before status : %x, sets : %x, tag : %x, data : %x\n", blk->status,  tags->extractSet(pkt->getAddr()), blk->tag, (uint64_t)blk->data[0]);
./mem/cache/cache_impl.hh:351:	  DPRINTF(Cache, "Create Dirty Lock Before status : %x, sets : %x, tag : %x, data : %x\n", blk->status,  tags->extractSet(pkt->getAddr()), blk->tag, (uint64_t)blk->data[0]);
./mem/cache/cache_impl.hh:355:	  DPRINTF(Cache, "Fetch and Lock Before status : %x, sets : %x, tag : %x, data : %x\n", blk->status,  tags->extractSet(pkt->getAddr()),blk->tag, (uint64_t)blk->data[0]);
./mem/cache/cache_impl.hh:357:	  DPRINTF(Cache, "After status : %x, sets : %x, tag : %x, data : %x\n", blk->status, tags->extractSet(pkt->getAddr()), blk->tag, (uint64_t)blk->data);
./mem/cache/cache_impl.hh:395:        DPRINTF(Cache, "%s new state is %s\n", __func__, blk->print());
./mem/cache/cache_impl.hh:426:    DPRINTF(Cache, "%s for %s address %x size %d\n", __func__,
./mem/cache/cache_impl.hh:441:        DPRINTF(Cache, "Got prefetch response from above for addr %#x (%s)\n",
./mem/cache/cache_impl.hh:482:        DPRINTF(Cache, "mem inhibited on 0x%x (%s): not responding\n",
./mem/cache/cache_impl.hh:582:	    DPRINTF(Cache, "After status : %x, tag : %x, data : %x\n", blk->status, blk->tag, (uint64_t)blk->data);
./mem/cache/cache_impl.hh:664:		  DPRINTF(Cache, "Create Dirty After status : %x, tag : %x, data : %x\n", blk->status, blk->tag, (uint64_t)blk->data);
./mem/cache/cache_impl.hh:674:		  DPRINTF(Cache, "Create Dirty Lock After status : %x, tag : %x, data : %x\n", blk->status, blk->tag, (uint64_t)blk->data);
./mem/cache/cache_impl.hh:747:    DPRINTF(Cache, "%s created %s address %x size %d\n",
./mem/cache/cache_impl.hh:775:                DPRINTF(Cache, "rcvd mem-inhibited %s on 0x%x (%s):"
./mem/cache/cache_impl.hh:781:                DPRINTF(Cache, "forwarding mem-inhibited %s on 0x%x (%s)\n",
./mem/cache/cache_impl.hh:787:            DPRINTF(Cache, "rcvd mem-inhibited %s on 0x%x: not responding\n",
./mem/cache/cache_impl.hh:813:        DPRINTF(Cache, "Sending an atomic %s for %x (%s)\n",
./mem/cache/cache_impl.hh:823:        DPRINTF(Cache, "Receive response: %s for addr %x (%s) in state %i\n",
./mem/cache/cache_impl.hh:929:    DPRINTF(Cache, "functional %s %x (%s) %s%s%s\n",
./mem/cache/cache_impl.hh:973:        DPRINTF(Cache, "Cache received packet with error for address %x (%s), "
./mem/cache/cache_impl.hh:978:    DPRINTF(Cache, "Handling response to %s for address %x (%s)\n",
./mem/cache/cache_impl.hh:1011:        DPRINTF(Cache, "Block for addr %x being updated in Cache\n",
./mem/cache/cache_impl.hh:1022:          DPRINTF(Cache, "Fetch and Lock After status : %x, tag : %x, data : %x\n", blk->status, blk->tag, (uint64_t)blk->data);
./mem/cache/cache_impl.hh:1093:                DPRINTF(Cache, "%s updated cmd to %s for address %x\n",
./mem/cache/cache_impl.hh:1114:            DPRINTF(Cache, "processing deferred snoop...\n");
./mem/cache/cache_impl.hh:1168:    DPRINTF(Cache, "Leaving %s with %s for address %x\n", __func__,
./mem/cache/cache_impl.hh:1276:    DPRINTF(Cache, "%s%s %x uncacheable\n", pkt->cmdString(),
./mem/cache/cache_impl.hh:1310:            DPRINTF(Cache, "replacement: replacing %x (%s) with %x (%s): %s\n",
./mem/cache/cache_impl.hh:1355:            DPRINTF(Cache, "using temp block for %x (%s)\n", addr,
./mem/cache/cache_impl.hh:1389:    DPRINTF(Cache, "Block addr %x (%s) moving from state %x to %s\n",
./mem/cache/cache_impl.hh:1416:    DPRINTF(Cache, "%s for %s address %x size %d\n", __func__,
./mem/cache/cache_impl.hh:1439:    DPRINTF(Cache, "%s created response: %s address %x size %d\n",
./mem/cache/cache_impl.hh:1450:    DPRINTF(Cache, "%s for %s address %x size %d\n", __func__,
./mem/cache/cache_impl.hh:1504:         DPRINTF(Cache, "%s snoop miss for %s address %x size %d\n",
./mem/cache/cache_impl.hh:1508:        DPRINTF(Cache, "%s snoop hit for %s for address %x size %d, "
./mem/cache/cache_impl.hh:1524:        DPRINTF(Cache, "Squashing prefetch from lower cache %#x\n",
./mem/cache/cache_impl.hh:1571:    DPRINTF(Cache, "new state is %s\n", blk->print());
./mem/cache/cache_impl.hh:1579:    DPRINTF(Cache, "%s for %s address %x size %d\n", __func__,
./mem/cache/cache_impl.hh:1615:        DPRINTF(Cache, "Squashing prefetch from lower cache on mshr hit %#x\n",
./mem/cache/cache_impl.hh:1624:        DPRINTF(Cache, "Deferring snoop on in-service MSHR to blk %x (%s)."
./mem/cache/cache_impl.hh:1636:        DPRINTF(Cache, "Snoop hit in writeback to addr: %x (%s)\n",
./mem/cache/cache_impl.hh:1854:                DPRINTF(Cache, "Prefetch squashed by upper cache.  "
./mem/cache/cache_impl.hh:1868:                DPRINTF(Cache, "Upward snoop of prefetch for addr"
./mem/cache/cache_impl.hh:1966:        DPRINTF(Cache,"Scheduling a retry while blocked\n");
./mem/cache/base.hh:517:        DPRINTF(Cache,"Blocking for cause %d, mask=%d\n", cause, blocked);
./mem/cache/base.hh:531:        DPRINTF(Cache,"Unblocking for cause %d, mask=%d\n", cause, blocked);
