%!PS-Adobe-2.0 EPSF-2.0
%%Title: ClassName
%%Creator: Doxygen
%%CreationDate: Time
%%For: 
%Magnification: 1.00
%%Orientation: Portrait
%%BoundingBox: 0 0 500 241.546
%%Pages: 0
%%BeginSetup
%%EndSetup
%%EndComments

% ----- variables -----

/boxwidth 0 def
/boxheight 40 def
/fontheight 24 def
/marginwidth 10 def
/distx 20 def
/disty 40 def
/boundaspect 2.07 def  % aspect ratio of the BoundingBox (width/height)
/boundx 500 def
/boundy boundx boundaspect div def
/xspacing 0 def
/yspacing 0 def
/rows 15 def
/cols 9 def
/scalefactor 0 def
/boxfont /Times-Roman findfont fontheight scalefont def

% ----- procedures -----

/dotted { [1 4] 0 setdash } def
/dashed { [5] 0 setdash } def
/solid  { [] 0 setdash } def

/max % result = MAX(arg1,arg2)
{
  /a exch def
  /b exch def
  a b gt {a} {b} ifelse
} def

/xoffset % result = MAX(0,(scalefactor-(boxwidth*cols+distx*(cols-1)))/2)
{
  0 scalefactor boxwidth cols mul distx cols 1 sub mul add sub 2 div max
} def

/cw % boxwidth = MAX(boxwidth, stringwidth(arg1))
{
  /str exch def
  /boxwidth boxwidth str stringwidth pop max def
} def

/box % draws a box with text `arg1' at grid pos (arg2,arg3)
{ gsave
  2 setlinewidth
  newpath
  exch xspacing mul xoffset add
  exch yspacing mul
  moveto
  boxwidth 0 rlineto 
  0 boxheight rlineto 
  boxwidth neg 0 rlineto 
  0 boxheight neg rlineto 
  closepath
  dup stringwidth pop neg boxwidth add 2 div
  boxheight fontheight 2 div sub 2 div
  rmoveto show stroke
  grestore
} def  

/mark
{ newpath
  exch xspacing mul xoffset add boxwidth add
  exch yspacing mul
  moveto
  0 boxheight 4 div rlineto
  boxheight neg 4 div boxheight neg 4 div rlineto
  closepath
  eofill
  stroke
} def

/arrow
{ newpath
  moveto
  3 -8 rlineto
  -6 0 rlineto
  3 8 rlineto
  closepath
  eofill
  stroke
} def

/out % draws an output connector for the block at (arg1,arg2)
{
  newpath
  exch xspacing mul xoffset add boxwidth 2 div add
  exch yspacing mul boxheight add
  /y exch def
  /x exch def
  x y moveto
  0 disty 2 div rlineto 
  stroke
  1 eq { x y disty 2 div add arrow } if
} def

/in % draws an input connector for the block at (arg1,arg2)
{
  newpath
  exch xspacing mul xoffset add boxwidth 2 div add
  exch yspacing mul disty 2 div sub
  /y exch def
  /x exch def
  x y moveto
  0 disty 2 div rlineto
  stroke
  1 eq { x y disty 2 div add arrow } if
} def

/hedge
{
  exch xspacing mul xoffset add boxwidth 2 div add
  exch yspacing mul boxheight 2 div sub
  /y exch def
  /x exch def
  newpath
  x y moveto
  boxwidth 2 div distx add 0 rlineto
  stroke
  1 eq
  { newpath x boxwidth 2 div distx add add y moveto
    -8 3 rlineto
    0 -6 rlineto
    8 3 rlineto
    closepath
    eofill
    stroke
  } if
} def

/vedge
{
  /ye exch def
  /ys exch def
  /xs exch def
  newpath
  xs xspacing mul xoffset add boxwidth 2 div add dup
  ys yspacing mul boxheight 2 div sub
  moveto
  ye yspacing mul boxheight 2 div sub
  lineto
  stroke
} def

/conn % connections the blocks from col `arg1' to `arg2' of row `arg3'
{
  /ys exch def
  /xe exch def
  /xs exch def
  newpath
  xs xspacing mul xoffset add boxwidth 2 div add
  ys yspacing mul disty 2 div sub
  moveto
  xspacing xe xs sub mul 0
  rlineto
  stroke
} def

% ----- main ------

boxfont setfont
1 boundaspect scale
(ClockedObject) cw
(SimObject) cw
(EventManager) cw
(Serializable) cw
(Drainable) cw
(RubyController) cw
(NetworkLink) cw
(NetworkLink_d) cw
(MemObject) cw
(BasePrefetcher) cw
(RubySystem) cw
(BaseTags) cw
(CreditLink_d) cw
(AbstractMemory) cw
(AddrMapper) cw
(ArmTableWalker) cw
(BaseCache) cw
(BaseBus) cw
(CommMonitor) cw
(PioDevice) cw
(MemTest) cw
(NetworkTest) cw
(System) cw
(X86PagetableWalker) cw
(GHBPrefetcher) cw
(StridePrefetcher) cw
(TaggedPrefetcher) cw
(FALRU) cw
(LRU) cw
/boxwidth boxwidth marginwidth 2 mul add def
/xspacing boxwidth distx add def
/yspacing boxheight disty add def
/scalefactor 
  boxwidth cols mul distx cols 1 sub mul add
  boxheight rows mul disty rows 1 sub mul add boundaspect mul 
  max def
boundx scalefactor div boundy scalefactor div scale

% ----- classes -----

 (ClockedObject) 3 12 box
 (SimObject) 3 13 box
 (EventManager) 2 14 box
 (Serializable) 3 14 box
 (Drainable) 4 14 box
 (RubyController) 0 11 box
 (NetworkLink) 1 11 box
 (NetworkLink_d) 2 11 box
 (MemObject) 3 11 box
 (BasePrefetcher) 5 11 box
 (RubySystem) 6 11 box
 (BaseTags) 7 11 box
 (CreditLink_d) 2 10 box
 (AbstractMemory) 4 10 box
4 10 mark
 (AddrMapper) 4 9 box
4 9 mark
 (ArmTableWalker) 4 8 box
4 8 mark
 (BaseCache) 4 7 box
 (BaseBus) 4 6 box
4 6 mark
 (CommMonitor) 4 5 box
 (PioDevice) 4 4 box
4 4 mark
 (MemTest) 4 3 box
 (NetworkTest) 4 2 box
 (System) 4 1 box
4 1 mark
 (X86PagetableWalker) 4 0 box
 (GHBPrefetcher) 6 10 box
 (StridePrefetcher) 6 9 box
 (TaggedPrefetcher) 6 8 box
 (FALRU) 8 10 box
 (LRU) 8 9 box

% ----- relations -----

solid
0 3 12 out
solid
1 3 13 in
solid
0 3 13 out
solid
2 4 14 conn
solid
1 2 14 in
solid
1 3 14 in
solid
1 4 14 in
solid
1 3 11.25 out
solid
0 7 12 conn
solid
0 0 11.75 in
solid
0 1 11.75 in
solid
0 2 11.75 in
solid
1 2 10.25 out
solid
0 3 11.75 in
solid
1 3 10.25 out
solid
0 5 11.75 in
solid
1 5 10.25 out
solid
0 6 11.75 in
solid
0 7 11.75 in
solid
1 7 10.25 out
solid
0 2 10.75 in
solid
0 3 10.5 hedge
solid
0 3 9.5 hedge
solid
0 3 8.5 hedge
solid
0 3 7.5 hedge
solid
0 3 6.5 hedge
solid
0 3 5.5 hedge
solid
0 3 4.5 hedge
solid
0 3 3.5 hedge
solid
0 3 2.5 hedge
solid
0 3 1.5 hedge
solid
0 3 0.5 hedge
solid
3 11 0.5 vedge
solid
0 5 10.5 hedge
solid
0 5 9.5 hedge
solid
0 5 8.5 hedge
solid
5 11 8.5 vedge
solid
0 7 10.5 hedge
solid
0 7 9.5 hedge
solid
7 11 9.5 vedge
