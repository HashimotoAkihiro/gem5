./isa/decoder/two_byte_opcodes.isa:                        0x7: MOVQ(Pq,Qq);
./isa/decoder/two_byte_opcodes.isa:                        0x7: MOVQ(Qq,Pq);
./isa/decoder/two_byte_opcodes.isa:                        0x6: MOVQ(Vq,Wq);
./isa/decoder/two_byte_opcodes.isa:                        0x6: MOVQ2DQ(Vo,PRq);
./isa/decoder/two_byte_opcodes.isa:                        0x6: MOVQ(Wq,Vq);
./isa/decoder/two_byte_opcodes.isa:                        0x7: MASKMOVQ(Pq,PRq);
./isa/insts/simd64/integer/data_transfer/move.py:def macroop MOVQ_MMX_MMX {
./isa/insts/simd64/integer/data_transfer/move.py:def macroop MOVQ_MMX_M {
./isa/insts/simd64/integer/data_transfer/move.py:def macroop MOVQ_MMX_P {
./isa/insts/simd64/integer/data_transfer/move.py:def macroop MOVQ_M_MMX {
./isa/insts/simd64/integer/data_transfer/move.py:def macroop MOVQ_P_MMX {
./isa/insts/simd64/integer/data_transfer/move.py:# MOVQ2DQ
./isa/insts/simd64/integer/data_transfer/move_non_temporal.py:def macroop MASKMOVQ_MMX_MMX {
./isa/insts/simd128/integer/data_transfer/move.py:def macroop MOVQ_XMM_XMM {
./isa/insts/simd128/integer/data_transfer/move.py:def macroop MOVQ_XMM_M {
./isa/insts/simd128/integer/data_transfer/move.py:def macroop MOVQ_XMM_P {
./isa/insts/simd128/integer/data_transfer/move.py:def macroop MOVQ_M_XMM {
./isa/insts/simd128/integer/data_transfer/move.py:def macroop MOVQ_P_XMM {
./isa/insts/simd128/integer/data_transfer/move.py:def macroop MOVQ2DQ_XMM_MMX {
